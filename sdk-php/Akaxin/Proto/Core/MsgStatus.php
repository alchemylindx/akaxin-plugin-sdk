<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core/core.proto

namespace Akaxin\Proto\Core;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * msg_status:1 发送成功
 * msg_status:0 默认状态
 * msg_status:-1 用户非好友关系，二人消息发送失败
 * msg_status:-2 用户非群成员，群消息发送失败
 *
 * 
 */
class MsgStatus extends \Google\Protobuf\Internal\Message
{
    /**
     * 
     */
    private $msg_id = '';
    /**
     * 
     */
    private $msg_status = 0;
    /**
     * msg_server_time 等于此条消息在服务器数据库的值
     * 如果是发送成功的状态，此值有效。
     * 为什么不使用服务器下发这条请求时的即时时间？
     * 这样的话，可以脱离状态，随意的重发来保证成功。
     * &#64;since v2
     * &#64;todo 补充v2之前版本对此字段的处理逻辑（默认使用msg_time_send的值）
     *
     * 
     */
    private $msg_server_time = 0;

    public function __construct() {
        \GPBMetadata\Core\Core::initOnce();
        parent::__construct();
    }

    /**
     * 
     * @return string
     */
    public function getMsgId()
    {
        return $this->msg_id;
    }

    /**
     * 
     * @param string $var
     * @return $this
     */
    public function setMsgId($var)
    {
        GPBUtil::checkString($var, True);
        $this->msg_id = $var;

        return $this;
    }

    /**
     * 
     * @return int
     */
    public function getMsgStatus()
    {
        return $this->msg_status;
    }

    /**
     * 
     * @param int $var
     * @return $this
     */
    public function setMsgStatus($var)
    {
        GPBUtil::checkInt32($var);
        $this->msg_status = $var;

        return $this;
    }

    /**
     * msg_server_time 等于此条消息在服务器数据库的值
     * 如果是发送成功的状态，此值有效。
     * 为什么不使用服务器下发这条请求时的即时时间？
     * 这样的话，可以脱离状态，随意的重发来保证成功。
     * &#64;since v2
     * &#64;todo 补充v2之前版本对此字段的处理逻辑（默认使用msg_time_send的值）
     *
     * 
     * @return int|string
     */
    public function getMsgServerTime()
    {
        return $this->msg_server_time;
    }

    /**
     * msg_server_time 等于此条消息在服务器数据库的值
     * 如果是发送成功的状态，此值有效。
     * 为什么不使用服务器下发这条请求时的即时时间？
     * 这样的话，可以脱离状态，随意的重发来保证成功。
     * &#64;since v2
     * &#64;todo 补充v2之前版本对此字段的处理逻辑（默认使用msg_time_send的值）
     *
     * 
     * @param int|string $var
     * @return $this
     */
    public function setMsgServerTime($var)
    {
        GPBUtil::checkInt64($var);
        $this->msg_server_time = $var;

        return $this;
    }

}

